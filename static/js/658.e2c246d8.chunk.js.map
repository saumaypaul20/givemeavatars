{"version":3,"file":"static/js/658.e2c246d8.chunk.js","mappings":"kSAqBA,IA4EA,EA5EmB,SAACA,GAClB,IAAMC,GAASC,EAAAA,EAAAA,QAAY,MAErBC,GAAcC,EAAAA,EAAAA,cAAY,WAC9B,IAAMC,EAAMJ,EAAOK,QAAQC,WAjB/B,SAAsBC,EAAWC,GAC/B,IAAMC,EAAYC,IAAIC,gBAAgBJ,GAEhCK,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAON,EACZG,EAAKI,SAAWR,EAChBK,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,GAE1BS,YAAW,kBAAMX,IAAIY,gBAAgBb,EAAU,GAAE,IACnD,CAQIc,CADa,IAAIC,KAAK,CAACpB,GAAM,CAAEqB,KAAM,kBACnB,cACpB,GAAG,IAEH,OACE,gBAAKC,MAAO,CAAEC,QAAS,eAAgB,UACrC,SAACC,EAAA,EAAG,CACFC,GAAI,CACFF,QAAS,OACTG,MAAO,OACPC,GAAI,EACJC,EAAG,EACHC,aAAc,MACd,UAEF,SAACL,EAAA,EAAG,CACFC,GAAI,CACFK,UAAW,SACXC,SAAU,OACVC,SAAU,CAAEC,GAAI,IAAKC,GAAI,KACzBC,GAAI,OACJC,UAAW,KACXP,aAAc,KACdQ,SAAU,OACVC,WAAY,yBACZ,UAEF,SAACC,EAAA,EAAK,CAACd,GAAI,CAAEe,EAAG,EAAGF,WAAY,yBAA0B,UACvD,SAACC,EAAA,EAAK,CACJE,QAAQ,WACRhB,GAAI,CACFI,aAAc,KACdQ,SAAU,OACVK,YAAa,oBACbC,QAAS,oBACTL,WAAY,yBACZ,UAEF,SAACM,EAAA,EAAW,CAACC,UAAU,UAAUC,MAAM,MAAML,QAAQ,QAAO,UAC1D,UAACjB,EAAA,EAAG,CAACC,GAAI,CAAEsB,cAAe,UAAW,WACnC,gBAAKC,IAAKpD,EAAO,UACf,SAAC,KAAM,UAAKD,OAEd,UAACsD,EAAA,GAAU,CACTC,QAASpD,EACT2C,QAAQ,WACRhB,GAAI,CACF0B,GAAI,EACJT,YAAa,OACb,UAAW,CAAEA,YAAa,SAC1B,UAED,KACD,SAACU,EAAA,EAAY,CACX3B,GAAI,CACF4B,SAAU,GACVC,MAAO,OACP,UAAW,CAAEA,MAAO,4BAY5C,EC/FaC,EAAc,CACtBC,aAAc,CACX,cACA,gBACA,gBACA,eACA,SACA,UACA,gBACA,iBACA,cAEDC,YAAa,CAAC,SAAU,eACxBC,eAAgB,CACf,aACA,gBACA,cACA,QACA,iBACA,mBAGDC,gBAAiB,CAChB,QACA,OACA,iBACA,iBACA,QACA,aACA,aAEDC,UAAW,CACV,SACA,QACA,SACA,eACA,QACA,YACA,aACA,OACA,WACA,MACA,cAEDC,QAAS,CACR,WACA,MACA,QACA,kBACA,cACA,cACA,gBACA,gBACA,iBACA,gBACA,cACA,kBACA,qBACA,qBACA,sBACA,mBACA,oBACA,yBACA,SACA,oBACA,oBACA,mBACA,wBACA,sBACA,qBACA,sBACA,sBACA,iBACA,qBACA,6BACA,SACA,aACA,aACA,aACA,cAEDC,YAAa,CACZ,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,OACA,MACA,SAEDC,QAAS,CACR,QACA,MACA,UACA,QACA,UACA,QACA,SACA,OACA,SACA,YACA,OACA,aAEDC,YAAa,CACZ,QACA,eACA,UACA,iBACA,cACA,gBACA,uBACA,eACA,sBACA,iBACA,SACA,iBAEDC,UAAW,CACV,YACA,UACA,YACA,SACA,UACA,MACA,aACA,UACA,QACA,SACA,UACA,SAEDC,UAAW,CACV,SACA,SACA,OACA,QACA,QACA,YACA,UCjJMC,EAAqB,WAC/B,MAAO,CACLV,YAAaF,EAAYE,YAAYW,KAAKC,MAAMD,KAAKE,SAASf,EAAYE,YAAYc,SACtFV,QAASN,EAAYM,QAAQO,KAAKC,MAAMD,KAAKE,SAASf,EAAYM,QAAQU,SAC1EZ,gBAAiBJ,EAAYI,gBAAgBS,KAAKC,MAAMD,KAAKE,SAASf,EAAYI,gBAAgBY,SAClGX,UAAWL,EAAYK,UAAUQ,KAAKC,MAAMD,KAAKE,SAASf,EAAYK,UAAUW,SAChFb,eAAgBH,EAAYG,eAAeU,KAAKC,MAAMD,KAAKE,SAASf,EAAYG,eAAea,SAC/FC,WAAYjB,EAAYC,aAAaY,KAAKC,MAAMD,KAAKE,SAASf,EAAYC,aAAae,SACvFT,YAAaP,EAAYO,YAAYM,KAAKC,MAAMD,KAAKE,SAASf,EAAYO,YAAYS,SACtFR,QAASR,EAAYQ,QAAQK,KAAKC,MAAMD,KAAKE,SAASf,EAAYQ,QAAQQ,SAC1EP,YAAaT,EAAYS,YAAYI,KAAKC,MAAMD,KAAKE,SAASf,EAAYS,YAAYO,SACtFN,UAAWV,EAAYU,UAAUG,KAAKC,MAAMD,KAAKE,SAASf,EAAYU,UAAUM,SAChFL,UAAWX,EAAYW,UAAUE,KAAKC,MAAMD,KAAKE,SAASf,EAAYW,UAAUK,SAEpF,E,oBC2EF,MAnFA,WACE,OAA8BE,EAAAA,EAAAA,UAAgB,IAAG,eAA1CC,EAAO,KAAEC,EAAU,KAC1B,GAA0BF,EAAAA,EAAAA,UAAS,GAAE,eAA9BG,EAAK,KAAEC,EAAQ,KAkBtB,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,EACEI,MAAMC,KAAK,CAAET,OAHG,KAGoB,WAClC,OAAO,UAAKJ,IACd,IAEJ,GAAG,KAWD,SAACc,EAAA,EAAW,WACV,UAAC1C,EAAA,EAAK,CACJd,GAAI,CACFU,GAAI,OACJR,GAAI,EACJuD,GAAI,EACJ3D,QAAS,OACTwB,cAAe,SACfX,UAAW,KACXE,WACE,+FACF6C,UAAW,UAEb1C,QAAQ,WAAU,WAElB,SAAC2C,EAAA,EACC,CACAC,MAAM,KACNC,UAAU,KACVC,UAAU,QACV9D,GAAI,SAAC+D,GAAK,OAAKA,EAAMC,WAAWC,QAAQ,EAAC,SAC1C,qBAGD,SAACN,EAAA,EAAU,CACTC,MAAM,KACNC,UAAU,KACVC,UAAU,QACV9D,GAAI,CAAEkE,UAAW,SAAUC,GAAI,EAAGvC,SAAU,GAAIwC,WAAY,IAAK,SAClE,+FAKD,iBAAKC,UAAU,MAAK,WAClB,yBACGpB,EAAQqB,KAAI,SAACC,EAAGC,GACf,OACE,SAAC,GAAU,QAETC,MAAOD,EAAIE,WACX7E,MAAO,CAAEI,MAAO,IAAK0E,OAAQ,IAAKC,QAAS,SACvCL,GAHCC,EAAIE,WAMf,OAEF,SAACG,EAAA,EAAM,CACLhD,MAAM,UACNiD,KAAK,KACL9D,QAAQ,WACRS,QAAS,kBA5DF,WACf,IAAMsD,EAAWzB,MAAMC,KAAK,CAAET,OAVZ,KAUmC,WACnD,OAAO,UAAKJ,IACd,IACAQ,EAAW,GAAD,eAAKD,GAAY8B,IAC3B3B,EAASD,EAAQ,EACnB,CAsDyB6B,EAAU,EACzBhF,GAAI,CAAE6B,MAAO,QAASD,SAAU,GAAIqD,GAAI,GAAI,SAC7C,qBAOX,C","sources":["components/AvatarComp/AvatarComp.tsx","configs/options.ts","utils/data.ts","App.tsx"],"sourcesContent":["import React, { useCallback, useRef } from \"react\";\nimport Avatar from \"avataaars\";\nimport AspectRatio from \"@mui/joy/AspectRatio\";\nimport Box from \"@mui/joy/Box\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Sheet from \"@mui/joy/Sheet\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\n\nfunction downloadBlob(blob: any, filename: any) {\n  const objectUrl = URL.createObjectURL(blob);\n\n  const link = document.createElement(\"a\");\n  link.href = objectUrl;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n\n  setTimeout(() => URL.revokeObjectURL(objectUrl), 5000);\n}\n\nconst AvatarComp = (props: any) => {\n  const svgRef = useRef<any>(null);\n\n  const downloadSVG = useCallback(() => {\n    const svg = svgRef.current.innerHTML;\n    const blob = new Blob([svg], { type: \"image/svg+xml\" });\n    downloadBlob(blob, `myimage.svg`);\n  }, []);\n\n  return (\n    <div style={{ display: \"inline-flex\" }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100%\",\n          py: 2,\n          m: 2,\n          borderRadius: \"xs\",\n        }}\n      >\n        <Box\n          sx={{\n            alignSelf: \"center\",\n            maxWidth: \"100%\",\n            minWidth: { xs: 220, sm: 360 },\n            mx: \"auto\",\n            boxShadow: \"sm\",\n            borderRadius: \"md\",\n            overflow: \"auto\",\n            background: \"rgba(255,255,255,0.1)\",\n          }}\n        >\n          <Sheet sx={{ p: 2, background: \"rgba(255,255,255,0.1)\" }}>\n            <Sheet\n              variant=\"outlined\"\n              sx={{\n                borderRadius: \"md\",\n                overflow: \"auto\",\n                borderColor: \"background.level2\",\n                bgcolor: \"background.level1\",\n                background: \"rgba(255,255,255,0.1)\",\n              }}\n            >\n              <AspectRatio objectFit=\"contain\" ratio=\"4/3\" variant=\"plain\">\n                <Box sx={{ flexDirection: \"column\" }}>\n                  <div ref={svgRef}>\n                    <Avatar {...props} />\n                  </div>\n                  <IconButton\n                    onClick={downloadSVG}\n                    variant=\"outlined\"\n                    sx={{\n                      mb: 1,\n                      borderColor: \"#fff\",\n                      \"&:hover\": { borderColor: \"#fff\" },\n                    }}\n                  >\n                    {\" \"}\n                    <DownloadIcon\n                      sx={{\n                        fontSize: 25,\n                        color: \"#fff\",\n                        \"&:hover\": { color: \"#000\" },\n                      }}\n                    ></DownloadIcon>\n                  </IconButton>\n                </Box>\n              </AspectRatio>\n            </Sheet>\n          </Sheet>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default AvatarComp;\n","export const ALL_OPTIONS = {\n     clothesArray :[\n        \"BlazerShirt\",\n        \"BlazerSweater\",\n        \"CollarSweater\",\n        \"GraphicShirt\",\n        \"Hoodie\",\n        \"Overall\",\n        \"ShirtCrewNeck\",\n        \"ShirtScoopNeck\",\n        \"ShirtVNeck\",\n      ],\n       avatarStyle :[\"Circle\", \"Transparent\"],\n       facialHairType :[\n        \"BeardLight\",\n        \"BeardMajestic\",\n        \"BeardMedium\",\n        \"Blank\",\n        \"MoustacheFancy\",\n        \"MoustacheMagnum\",\n      ],\n    \n       accessoriesType :[\n        \"Blank\",\n        \"Kurt\",\n        \"Prescription01\",\n        \"Prescription02\",\n        \"Round\",\n        \"Sunglasses\",\n        \"Wayfarers\",\n      ],\n       hairColor :[\n        \"Auburn\",\n        \"Black\",\n        \"Blonde\",\n        \"BlondeGolden\",\n        \"Brown\",\n        \"BrownDark\",\n        \"PastelPink\",\n        \"Blue\",\n        \"Platinum\",\n        \"Red\",\n        \"SilverGray\",\n      ],\n       topType :[\n        \"Eyepatch\",\n        \"Hat\",\n        \"Hijab\",\n        \"LongHairBigHair\",\n        \"LongHairBob\",\n        \"LongHairBun\",\n        \"LongHairCurly\",\n        \"LongHairCurvy\",\n        \"LongHairDreads\",\n        \"LongHairFrida\",\n        \"LongHairFro\",\n        \"LongHairFroBand\",\n        \"LongHairMiaWallace\",\n        \"LongHairNotTooLong\",\n        \"LongHairShavedSides\",\n        \"LongHairStraight\",\n        \"LongHairStraight2\",\n        \"LongHairStraightStrand\",\n        \"NoHair\",\n        \"ShortHairDreads01\",\n        \"ShortHairDreads02\",\n        \"ShortHairFrizzle\",\n        \"ShortHairShaggyMullet\",\n        \"ShortHairShortCurly\",\n        \"ShortHairShortFlat\",\n        \"ShortHairShortRound\",\n        \"ShortHairShortWaved\",\n        \"ShortHairSides\",\n        \"ShortHairTheCaesar\",\n        \"ShortHairTheCaesarSidePart\",\n        \"Turban\",\n        \"WinterHat1\",\n        \"WinterHat2\",\n        \"WinterHat3\",\n        \"WinterHat4\",\n      ],\n       clotheColor :[\n        \"Black\",\n        \"Blue01\",\n        \"Blue02\",\n        \"Blue03\",\n        \"Gray01\",\n        \"Gray02\",\n        \"Heather\",\n        \"PastelBlue\",\n        \"PastelGreen\",\n        \"PastelOrange\",\n        \"PastelRed\",\n        \"PastelYellow\",\n        \"Pink\",\n        \"Red\",\n        \"White\",\n      ],\n       eyeType :[\n        \"Close\",\n        \"Cry\",\n        \"Default\",\n        \"Dizzy\",\n        \"EyeRoll\",\n        \"Happy\",\n        \"Hearts\",\n        \"Side\",\n        \"Squint\",\n        \"Surprised\",\n        \"Wink\",\n        \"WinkWacky\",\n      ],\n       eyebrowType :[\n        \"Angry\",\n        \"AngryNatural\",\n        \"Default\",\n        \"DefaultNatural\",\n        \"FlatNatural\",\n        \"RaisedExcited\",\n        \"RaisedExcitedNatural\",\n        \"SadConcerned\",\n        \"SadConcernedNatural\",\n        \"UnibrowNatural\",\n        \"UpDown\",\n        \"UpDownNatural\",\n      ],\n       mouthType :[\n        \"Concerned\",\n        \"Default\",\n        \"Disbelief\",\n        \"Eating\",\n        \"Grimace\",\n        \"Sad\",\n        \"ScreamOpen\",\n        \"Serious\",\n        \"Smile\",\n        \"Tongue\",\n        \"Twinkle\",\n        \"Vomit\",\n      ],\n       skinColor :[\n        \"Tanned\",\n        \"Yellow\",\n        \"Pale\",\n        \"Light\",\n        \"Brown\",\n        \"DarkBrown\",\n        \"Black\",\n      ],\n}","import { ALL_OPTIONS } from \"../configs/options\"\n\nexport  const generateRandomStyle =()=>{\n    return {\n      avatarStyle: ALL_OPTIONS.avatarStyle[Math.floor(Math.random()*ALL_OPTIONS.avatarStyle.length)],\n      topType: ALL_OPTIONS.topType[Math.floor(Math.random()*ALL_OPTIONS.topType.length)],\n      accessoriesType: ALL_OPTIONS.accessoriesType[Math.floor(Math.random()*ALL_OPTIONS.accessoriesType.length)],\n      hairColor: ALL_OPTIONS.hairColor[Math.floor(Math.random()*ALL_OPTIONS.hairColor.length)],\n      facialHairType: ALL_OPTIONS.facialHairType[Math.floor(Math.random()*ALL_OPTIONS.facialHairType.length)],\n      clotheType: ALL_OPTIONS.clothesArray[Math.floor(Math.random()*ALL_OPTIONS.clothesArray.length)],\n      clotheColor: ALL_OPTIONS.clotheColor[Math.floor(Math.random()*ALL_OPTIONS.clotheColor.length)],\n      eyeType: ALL_OPTIONS.eyeType[Math.floor(Math.random()*ALL_OPTIONS.eyeType.length)],\n      eyebrowType: ALL_OPTIONS.eyebrowType[Math.floor(Math.random()*ALL_OPTIONS.eyebrowType.length)],\n      mouthType: ALL_OPTIONS.mouthType[Math.floor(Math.random()*ALL_OPTIONS.mouthType.length)],\n      skinColor: ALL_OPTIONS.skinColor[Math.floor(Math.random()*ALL_OPTIONS.skinColor.length)],\n    }\n  }","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/joy/Button\";\nimport \"./App.css\";\nimport AvatarComp from \"./components/AvatarComp/AvatarComp\";\nimport { generateRandomStyle } from \"./utils/data\";\nimport CssBaseline from \"@mui/joy/CssBaseline\";\nimport { Sheet, Typography } from \"@mui/joy\";\n\nfunction App() {\n  const [dataSet, setDataSet] = useState<any[]>([]);\n  const [count, setCount] = useState(1);\n  const arrayNumber = 16;\n  useEffect(() => {\n    setDataSet(\n      Array.from({ length: arrayNumber }, () => {\n        return { ...generateRandomStyle() };\n      })\n    );\n  }, []);\n\n  const loadMore = () => {\n    const newItems = Array.from({ length: arrayNumber }, () => {\n      return { ...generateRandomStyle() };\n    });\n    setDataSet([...dataSet, ...newItems]);\n    setCount(count + 1);\n  };\n\n  return (\n    <CssBaseline>\n      <Sheet\n        sx={{\n          mx: \"auto\", // margin left & right\n          py: 3, // padding top & bottom\n          px: 2, // padding left & right\n          display: \"flex\",\n          flexDirection: \"column\",\n          boxShadow: \"md\",\n          background:\n            \"linear-gradient(90deg, rgba(255,181,7,1) 0%, rgba(255,89,0,1) 45%, rgba(166,121,255,1) 100%)\",\n          textAlign: \"center\",\n        }}\n        variant=\"outlined\"\n      >\n        <Typography\n          // className=\"nanoseconds_text\"\n          level=\"h1\"\n          component=\"h1\"\n          textColor=\"white\"\n          sx={(theme) => theme.typography.display1}\n        >\n          Give Me Avatar!\n        </Typography>\n        <Typography\n          level=\"h5\"\n          component=\"h1\"\n          textColor=\"white\"\n          sx={{ fontStyle: \"italic\", pb: 5, fontSize: 22, fontFamily: \"\" }}\n        >\n          A free online random avatar generator for making beautiful personal\n          avatar within seconds\n        </Typography>\n\n        <div className=\"App\">\n          <div>\n            {dataSet.map((i, idx) => {\n              return (\n                <AvatarComp\n                  key={idx.toString()}\n                  index={idx.toString()}\n                  style={{ width: 200, height: 200, padding: \"30px\" }}\n                  {...i}\n                />\n              );\n            })}\n          </div>\n          <Button\n            color=\"neutral\"\n            size=\"lg\"\n            variant=\"outlined\"\n            onClick={() => loadMore()}\n            sx={{ color: \"white\", fontSize: 20, my: 4 }}\n          >\n            Load More\n          </Button>\n        </div>\n      </Sheet>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n"],"names":["props","svgRef","useRef","downloadSVG","useCallback","svg","current","innerHTML","blob","filename","objectUrl","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","setTimeout","revokeObjectURL","downloadBlob","Blob","type","style","display","Box","sx","width","py","m","borderRadius","alignSelf","maxWidth","minWidth","xs","sm","mx","boxShadow","overflow","background","Sheet","p","variant","borderColor","bgcolor","AspectRatio","objectFit","ratio","flexDirection","ref","IconButton","onClick","mb","Download","fontSize","color","ALL_OPTIONS","clothesArray","avatarStyle","facialHairType","accessoriesType","hairColor","topType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","generateRandomStyle","Math","floor","random","length","clotheType","useState","dataSet","setDataSet","count","setCount","useEffect","Array","from","CssBaseline","px","textAlign","Typography","level","component","textColor","theme","typography","display1","fontStyle","pb","fontFamily","className","map","i","idx","index","toString","height","padding","Button","size","newItems","loadMore","my"],"sourceRoot":""}